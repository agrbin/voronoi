// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voronoi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "voronoi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace voronoi {
class LatLngDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LatLng> {
} _LatLng_default_instance_;
class LinearDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Linear> {
} _Linear_default_instance_;
class UserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<User> {
} _User_default_instance_;
class PolygonDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Polygon> {
} _Polygon_default_instance_;
class VoronoiDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Voronoi> {
} _Voronoi_default_instance_;
class DbDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Db> {
} _Db_default_instance_;

namespace protobuf_voronoi_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLng, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLng, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatLng, lng_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Linear, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Linear, t0_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Linear, y0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Linear, dy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, totem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Polygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Polygon, point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Voronoi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Voronoi, totem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Voronoi, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Voronoi, region_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Db, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Db, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Db, voronoi_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(LatLng)},
  { 7, -1, sizeof(Linear)},
  { 15, -1, sizeof(User)},
  { 24, -1, sizeof(Polygon)},
  { 30, -1, sizeof(Voronoi)},
  { 38, -1, sizeof(Db)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LatLng_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Linear_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Polygon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Voronoi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Db_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "voronoi.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _LatLng_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Linear_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _User_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Polygon_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Voronoi_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Db_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_descriptor_2eproto::InitDefaults();
  _LatLng_default_instance_.DefaultConstruct();
  _Linear_default_instance_.DefaultConstruct();
  _User_default_instance_.DefaultConstruct();
  _Polygon_default_instance_.DefaultConstruct();
  _Voronoi_default_instance_.DefaultConstruct();
  _Db_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterEnumExtension(
    ::google::protobuf::FieldOptions::internal_default_instance(),
    314150, 14, false, false,
    &::voronoi::Visibility_IsValid);
  _User_default_instance_.get_mutable()->totem_ = const_cast< ::voronoi::LatLng*>(
      ::voronoi::LatLng::internal_default_instance());
  _User_default_instance_.get_mutable()->score_ = const_cast< ::voronoi::Linear*>(
      ::voronoi::Linear::internal_default_instance());
  _Db_default_instance_.get_mutable()->voronoi_ = const_cast< ::voronoi::Voronoi*>(
      ::voronoi::Voronoi::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rvoronoi.proto\022\007voronoi\032\020descriptor.pro"
      "to\"\"\n\006LatLng\022\013\n\003lat\030\001 \001(\001\022\013\n\003lng\030\002 \001(\001\"."
      "\n\006Linear\022\014\n\004t0_s\030\001 \001(\003\022\n\n\002y0\030\002 \001(\001\022\n\n\002dy"
      "\030\003 \001(\001\"g\n\004User\022\021\n\002id\030\001 \001(\tB\005\260\262\231\001\001\022\014\n\004nam"
      "e\030\002 \001(\t\022\036\n\005totem\030\003 \001(\0132\017.voronoi.LatLng\022"
      "\036\n\005score\030\004 \001(\0132\017.voronoi.Linear\")\n\007Polyg"
      "on\022\036\n\005point\030\001 \003(\0132\017.voronoi.LatLng\"\\\n\007Vo"
      "ronoi\022\036\n\005totem\030\001 \003(\0132\017.voronoi.LatLng\022\017\n"
      "\007user_id\030\002 \003(\t\022 \n\006region\030\003 \003(\0132\020.voronoi"
      ".Polygon\"D\n\002Db\022\033\n\004user\030\001 \003(\0132\r.voronoi.U"
      "ser\022!\n\007voronoi\030\002 \001(\0132\020.voronoi.Voronoi*%"
      "\n\nVisibility\022\n\n\006PUBLIC\020\000\022\013\n\007PRIVATE\020\001:H\n"
      "\nvisibility\022\035.google.protobuf.FieldOptio"
      "ns\030\246\226\023 \001(\0162\023.voronoi.Visibilityb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 559);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "voronoi.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_descriptor_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_voronoi_2eproto

const ::google::protobuf::EnumDescriptor* Visibility_descriptor() {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_enum_descriptors[0];
}
bool Visibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatLng::kLatFieldNumber;
const int LatLng::kLngFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatLng::LatLng()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_voronoi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:voronoi.LatLng)
}
LatLng::LatLng(const LatLng& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lat_, &from.lat_,
    reinterpret_cast<char*>(&lng_) -
    reinterpret_cast<char*>(&lat_) + sizeof(lng_));
  // @@protoc_insertion_point(copy_constructor:voronoi.LatLng)
}

void LatLng::SharedCtor() {
  ::memset(&lat_, 0, reinterpret_cast<char*>(&lng_) -
    reinterpret_cast<char*>(&lat_) + sizeof(lng_));
  _cached_size_ = 0;
}

LatLng::~LatLng() {
  // @@protoc_insertion_point(destructor:voronoi.LatLng)
  SharedDtor();
}

void LatLng::SharedDtor() {
}

void LatLng::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatLng::descriptor() {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatLng& LatLng::default_instance() {
  protobuf_voronoi_2eproto::InitDefaults();
  return *internal_default_instance();
}

LatLng* LatLng::New(::google::protobuf::Arena* arena) const {
  LatLng* n = new LatLng;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatLng::Clear() {
// @@protoc_insertion_point(message_clear_start:voronoi.LatLng)
  ::memset(&lat_, 0, reinterpret_cast<char*>(&lng_) -
    reinterpret_cast<char*>(&lat_) + sizeof(lng_));
}

bool LatLng::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:voronoi.LatLng)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double lat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lng = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lng_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:voronoi.LatLng)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:voronoi.LatLng)
  return false;
#undef DO_
}

void LatLng::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:voronoi.LatLng)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->lat(), output);
  }

  // double lng = 2;
  if (this->lng() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->lng(), output);
  }

  // @@protoc_insertion_point(serialize_end:voronoi.LatLng)
}

::google::protobuf::uint8* LatLng::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:voronoi.LatLng)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->lat(), target);
  }

  // double lng = 2;
  if (this->lng() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->lng(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:voronoi.LatLng)
  return target;
}

size_t LatLng::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:voronoi.LatLng)
  size_t total_size = 0;

  // double lat = 1;
  if (this->lat() != 0) {
    total_size += 1 + 8;
  }

  // double lng = 2;
  if (this->lng() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatLng::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:voronoi.LatLng)
  GOOGLE_DCHECK_NE(&from, this);
  const LatLng* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatLng>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:voronoi.LatLng)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:voronoi.LatLng)
    MergeFrom(*source);
  }
}

void LatLng::MergeFrom(const LatLng& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:voronoi.LatLng)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lng() != 0) {
    set_lng(from.lng());
  }
}

void LatLng::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:voronoi.LatLng)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatLng::CopyFrom(const LatLng& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:voronoi.LatLng)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatLng::IsInitialized() const {
  return true;
}

void LatLng::Swap(LatLng* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatLng::InternalSwap(LatLng* other) {
  std::swap(lat_, other->lat_);
  std::swap(lng_, other->lng_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatLng::GetMetadata() const {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LatLng

// double lat = 1;
void LatLng::clear_lat() {
  lat_ = 0;
}
double LatLng::lat() const {
  // @@protoc_insertion_point(field_get:voronoi.LatLng.lat)
  return lat_;
}
void LatLng::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:voronoi.LatLng.lat)
}

// double lng = 2;
void LatLng::clear_lng() {
  lng_ = 0;
}
double LatLng::lng() const {
  // @@protoc_insertion_point(field_get:voronoi.LatLng.lng)
  return lng_;
}
void LatLng::set_lng(double value) {
  
  lng_ = value;
  // @@protoc_insertion_point(field_set:voronoi.LatLng.lng)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Linear::kT0SFieldNumber;
const int Linear::kY0FieldNumber;
const int Linear::kDyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Linear::Linear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_voronoi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:voronoi.Linear)
}
Linear::Linear(const Linear& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&t0_s_, &from.t0_s_,
    reinterpret_cast<char*>(&dy_) -
    reinterpret_cast<char*>(&t0_s_) + sizeof(dy_));
  // @@protoc_insertion_point(copy_constructor:voronoi.Linear)
}

void Linear::SharedCtor() {
  ::memset(&t0_s_, 0, reinterpret_cast<char*>(&dy_) -
    reinterpret_cast<char*>(&t0_s_) + sizeof(dy_));
  _cached_size_ = 0;
}

Linear::~Linear() {
  // @@protoc_insertion_point(destructor:voronoi.Linear)
  SharedDtor();
}

void Linear::SharedDtor() {
}

void Linear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Linear::descriptor() {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Linear& Linear::default_instance() {
  protobuf_voronoi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Linear* Linear::New(::google::protobuf::Arena* arena) const {
  Linear* n = new Linear;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Linear::Clear() {
// @@protoc_insertion_point(message_clear_start:voronoi.Linear)
  ::memset(&t0_s_, 0, reinterpret_cast<char*>(&dy_) -
    reinterpret_cast<char*>(&t0_s_) + sizeof(dy_));
}

bool Linear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:voronoi.Linear)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 t0_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &t0_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:voronoi.Linear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:voronoi.Linear)
  return false;
#undef DO_
}

void Linear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:voronoi.Linear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 t0_s = 1;
  if (this->t0_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->t0_s(), output);
  }

  // double y0 = 2;
  if (this->y0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y0(), output);
  }

  // double dy = 3;
  if (this->dy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dy(), output);
  }

  // @@protoc_insertion_point(serialize_end:voronoi.Linear)
}

::google::protobuf::uint8* Linear::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:voronoi.Linear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 t0_s = 1;
  if (this->t0_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->t0_s(), target);
  }

  // double y0 = 2;
  if (this->y0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y0(), target);
  }

  // double dy = 3;
  if (this->dy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:voronoi.Linear)
  return target;
}

size_t Linear::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:voronoi.Linear)
  size_t total_size = 0;

  // int64 t0_s = 1;
  if (this->t0_s() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->t0_s());
  }

  // double y0 = 2;
  if (this->y0() != 0) {
    total_size += 1 + 8;
  }

  // double dy = 3;
  if (this->dy() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Linear::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:voronoi.Linear)
  GOOGLE_DCHECK_NE(&from, this);
  const Linear* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Linear>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:voronoi.Linear)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:voronoi.Linear)
    MergeFrom(*source);
  }
}

void Linear::MergeFrom(const Linear& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:voronoi.Linear)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.t0_s() != 0) {
    set_t0_s(from.t0_s());
  }
  if (from.y0() != 0) {
    set_y0(from.y0());
  }
  if (from.dy() != 0) {
    set_dy(from.dy());
  }
}

void Linear::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:voronoi.Linear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Linear::CopyFrom(const Linear& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:voronoi.Linear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Linear::IsInitialized() const {
  return true;
}

void Linear::Swap(Linear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Linear::InternalSwap(Linear* other) {
  std::swap(t0_s_, other->t0_s_);
  std::swap(y0_, other->y0_);
  std::swap(dy_, other->dy_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Linear::GetMetadata() const {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Linear

// int64 t0_s = 1;
void Linear::clear_t0_s() {
  t0_s_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Linear::t0_s() const {
  // @@protoc_insertion_point(field_get:voronoi.Linear.t0_s)
  return t0_s_;
}
void Linear::set_t0_s(::google::protobuf::int64 value) {
  
  t0_s_ = value;
  // @@protoc_insertion_point(field_set:voronoi.Linear.t0_s)
}

// double y0 = 2;
void Linear::clear_y0() {
  y0_ = 0;
}
double Linear::y0() const {
  // @@protoc_insertion_point(field_get:voronoi.Linear.y0)
  return y0_;
}
void Linear::set_y0(double value) {
  
  y0_ = value;
  // @@protoc_insertion_point(field_set:voronoi.Linear.y0)
}

// double dy = 3;
void Linear::clear_dy() {
  dy_ = 0;
}
double Linear::dy() const {
  // @@protoc_insertion_point(field_get:voronoi.Linear.dy)
  return dy_;
}
void Linear::set_dy(double value) {
  
  dy_ = value;
  // @@protoc_insertion_point(field_set:voronoi.Linear.dy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kIdFieldNumber;
const int User::kNameFieldNumber;
const int User::kTotemFieldNumber;
const int User::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_voronoi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:voronoi.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_totem()) {
    totem_ = new ::voronoi::LatLng(*from.totem_);
  } else {
    totem_ = NULL;
  }
  if (from.has_score()) {
    score_ = new ::voronoi::Linear(*from.score_);
  } else {
    score_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:voronoi.User)
}

void User::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&totem_, 0, reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&totem_) + sizeof(score_));
  _cached_size_ = 0;
}

User::~User() {
  // @@protoc_insertion_point(destructor:voronoi.User)
  SharedDtor();
}

void User::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete totem_;
  }
  if (this != internal_default_instance()) {
    delete score_;
  }
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  protobuf_voronoi_2eproto::InitDefaults();
  return *internal_default_instance();
}

User* User::New(::google::protobuf::Arena* arena) const {
  User* n = new User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void User::Clear() {
// @@protoc_insertion_point(message_clear_start:voronoi.User)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && totem_ != NULL) {
    delete totem_;
  }
  totem_ = NULL;
  if (GetArenaNoVirtual() == NULL && score_ != NULL) {
    delete score_;
  }
  score_ = NULL;
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:voronoi.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1 [(.voronoi.visibility) = PRIVATE];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "voronoi.User.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "voronoi.User.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .voronoi.LatLng totem = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_totem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .voronoi.Linear score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_score()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:voronoi.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:voronoi.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:voronoi.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.voronoi.visibility) = PRIVATE];
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "voronoi.User.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "voronoi.User.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .voronoi.LatLng totem = 3;
  if (this->has_totem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->totem_, output);
  }

  // .voronoi.Linear score = 4;
  if (this->has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->score_, output);
  }

  // @@protoc_insertion_point(serialize_end:voronoi.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:voronoi.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.voronoi.visibility) = PRIVATE];
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "voronoi.User.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "voronoi.User.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .voronoi.LatLng totem = 3;
  if (this->has_totem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->totem_, deterministic, target);
  }

  // .voronoi.Linear score = 4;
  if (this->has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->score_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:voronoi.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:voronoi.User)
  size_t total_size = 0;

  // string id = 1 [(.voronoi.visibility) = PRIVATE];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .voronoi.LatLng totem = 3;
  if (this->has_totem()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->totem_);
  }

  // .voronoi.Linear score = 4;
  if (this->has_score()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->score_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:voronoi.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:voronoi.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:voronoi.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:voronoi.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_totem()) {
    mutable_totem()->::voronoi::LatLng::MergeFrom(from.totem());
  }
  if (from.has_score()) {
    mutable_score()->::voronoi::Linear::MergeFrom(from.score());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:voronoi.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:voronoi.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  std::swap(totem_, other->totem_);
  std::swap(score_, other->score_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// User

// string id = 1 [(.voronoi.visibility) = PRIVATE];
void User::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::id() const {
  // @@protoc_insertion_point(field_get:voronoi.User.id)
  return id_.GetNoArena();
}
void User::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:voronoi.User.id)
}
#if LANG_CXX11
void User::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:voronoi.User.id)
}
#endif
void User::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:voronoi.User.id)
}
void User::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:voronoi.User.id)
}
::std::string* User::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:voronoi.User.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_id() {
  // @@protoc_insertion_point(field_release:voronoi.User.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:voronoi.User.id)
}

// string name = 2;
void User::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& User::name() const {
  // @@protoc_insertion_point(field_get:voronoi.User.name)
  return name_.GetNoArena();
}
void User::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:voronoi.User.name)
}
#if LANG_CXX11
void User::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:voronoi.User.name)
}
#endif
void User::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:voronoi.User.name)
}
void User::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:voronoi.User.name)
}
::std::string* User::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:voronoi.User.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* User::release_name() {
  // @@protoc_insertion_point(field_release:voronoi.User.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void User::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:voronoi.User.name)
}

// .voronoi.LatLng totem = 3;
bool User::has_totem() const {
  return this != internal_default_instance() && totem_ != NULL;
}
void User::clear_totem() {
  if (GetArenaNoVirtual() == NULL && totem_ != NULL) delete totem_;
  totem_ = NULL;
}
const ::voronoi::LatLng& User::totem() const {
  // @@protoc_insertion_point(field_get:voronoi.User.totem)
  return totem_ != NULL ? *totem_
                         : *::voronoi::LatLng::internal_default_instance();
}
::voronoi::LatLng* User::mutable_totem() {
  
  if (totem_ == NULL) {
    totem_ = new ::voronoi::LatLng;
  }
  // @@protoc_insertion_point(field_mutable:voronoi.User.totem)
  return totem_;
}
::voronoi::LatLng* User::release_totem() {
  // @@protoc_insertion_point(field_release:voronoi.User.totem)
  
  ::voronoi::LatLng* temp = totem_;
  totem_ = NULL;
  return temp;
}
void User::set_allocated_totem(::voronoi::LatLng* totem) {
  delete totem_;
  totem_ = totem;
  if (totem) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:voronoi.User.totem)
}

// .voronoi.Linear score = 4;
bool User::has_score() const {
  return this != internal_default_instance() && score_ != NULL;
}
void User::clear_score() {
  if (GetArenaNoVirtual() == NULL && score_ != NULL) delete score_;
  score_ = NULL;
}
const ::voronoi::Linear& User::score() const {
  // @@protoc_insertion_point(field_get:voronoi.User.score)
  return score_ != NULL ? *score_
                         : *::voronoi::Linear::internal_default_instance();
}
::voronoi::Linear* User::mutable_score() {
  
  if (score_ == NULL) {
    score_ = new ::voronoi::Linear;
  }
  // @@protoc_insertion_point(field_mutable:voronoi.User.score)
  return score_;
}
::voronoi::Linear* User::release_score() {
  // @@protoc_insertion_point(field_release:voronoi.User.score)
  
  ::voronoi::Linear* temp = score_;
  score_ = NULL;
  return temp;
}
void User::set_allocated_score(::voronoi::Linear* score) {
  delete score_;
  score_ = score;
  if (score) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:voronoi.User.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polygon::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polygon::Polygon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_voronoi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:voronoi.Polygon)
}
Polygon::Polygon(const Polygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      point_(from.point_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:voronoi.Polygon)
}

void Polygon::SharedCtor() {
  _cached_size_ = 0;
}

Polygon::~Polygon() {
  // @@protoc_insertion_point(destructor:voronoi.Polygon)
  SharedDtor();
}

void Polygon::SharedDtor() {
}

void Polygon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Polygon::descriptor() {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Polygon& Polygon::default_instance() {
  protobuf_voronoi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Polygon* Polygon::New(::google::protobuf::Arena* arena) const {
  Polygon* n = new Polygon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Polygon::Clear() {
// @@protoc_insertion_point(message_clear_start:voronoi.Polygon)
  point_.Clear();
}

bool Polygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:voronoi.Polygon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .voronoi.LatLng point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:voronoi.Polygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:voronoi.Polygon)
  return false;
#undef DO_
}

void Polygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:voronoi.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .voronoi.LatLng point = 1;
  for (unsigned int i = 0, n = this->point_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->point(i), output);
  }

  // @@protoc_insertion_point(serialize_end:voronoi.Polygon)
}

::google::protobuf::uint8* Polygon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:voronoi.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .voronoi.LatLng point = 1;
  for (unsigned int i = 0, n = this->point_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->point(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:voronoi.Polygon)
  return target;
}

size_t Polygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:voronoi.Polygon)
  size_t total_size = 0;

  // repeated .voronoi.LatLng point = 1;
  {
    unsigned int count = this->point_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Polygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:voronoi.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  const Polygon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Polygon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:voronoi.Polygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:voronoi.Polygon)
    MergeFrom(*source);
  }
}

void Polygon::MergeFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:voronoi.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
}

void Polygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:voronoi.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygon::CopyFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:voronoi.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygon::IsInitialized() const {
  return true;
}

void Polygon::Swap(Polygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Polygon::InternalSwap(Polygon* other) {
  point_.InternalSwap(&other->point_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Polygon::GetMetadata() const {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Polygon

// repeated .voronoi.LatLng point = 1;
int Polygon::point_size() const {
  return point_.size();
}
void Polygon::clear_point() {
  point_.Clear();
}
const ::voronoi::LatLng& Polygon::point(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Polygon.point)
  return point_.Get(index);
}
::voronoi::LatLng* Polygon::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Polygon.point)
  return point_.Mutable(index);
}
::voronoi::LatLng* Polygon::add_point() {
  // @@protoc_insertion_point(field_add:voronoi.Polygon.point)
  return point_.Add();
}
::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >*
Polygon::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Polygon.point)
  return &point_;
}
const ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >&
Polygon::point() const {
  // @@protoc_insertion_point(field_list:voronoi.Polygon.point)
  return point_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Voronoi::kTotemFieldNumber;
const int Voronoi::kUserIdFieldNumber;
const int Voronoi::kRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Voronoi::Voronoi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_voronoi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:voronoi.Voronoi)
}
Voronoi::Voronoi(const Voronoi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      totem_(from.totem_),
      user_id_(from.user_id_),
      region_(from.region_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:voronoi.Voronoi)
}

void Voronoi::SharedCtor() {
  _cached_size_ = 0;
}

Voronoi::~Voronoi() {
  // @@protoc_insertion_point(destructor:voronoi.Voronoi)
  SharedDtor();
}

void Voronoi::SharedDtor() {
}

void Voronoi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Voronoi::descriptor() {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Voronoi& Voronoi::default_instance() {
  protobuf_voronoi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Voronoi* Voronoi::New(::google::protobuf::Arena* arena) const {
  Voronoi* n = new Voronoi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Voronoi::Clear() {
// @@protoc_insertion_point(message_clear_start:voronoi.Voronoi)
  totem_.Clear();
  user_id_.Clear();
  region_.Clear();
}

bool Voronoi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:voronoi.Voronoi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .voronoi.LatLng totem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_totem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id(this->user_id_size() - 1).data(),
            this->user_id(this->user_id_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "voronoi.Voronoi.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .voronoi.Polygon region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:voronoi.Voronoi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:voronoi.Voronoi)
  return false;
#undef DO_
}

void Voronoi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:voronoi.Voronoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .voronoi.LatLng totem = 1;
  for (unsigned int i = 0, n = this->totem_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->totem(i), output);
  }

  // repeated string user_id = 2;
  for (int i = 0, n = this->user_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id(i).data(), this->user_id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "voronoi.Voronoi.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->user_id(i), output);
  }

  // repeated .voronoi.Polygon region = 3;
  for (unsigned int i = 0, n = this->region_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->region(i), output);
  }

  // @@protoc_insertion_point(serialize_end:voronoi.Voronoi)
}

::google::protobuf::uint8* Voronoi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:voronoi.Voronoi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .voronoi.LatLng totem = 1;
  for (unsigned int i = 0, n = this->totem_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->totem(i), deterministic, target);
  }

  // repeated string user_id = 2;
  for (int i = 0, n = this->user_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id(i).data(), this->user_id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "voronoi.Voronoi.user_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->user_id(i), target);
  }

  // repeated .voronoi.Polygon region = 3;
  for (unsigned int i = 0, n = this->region_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->region(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:voronoi.Voronoi)
  return target;
}

size_t Voronoi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:voronoi.Voronoi)
  size_t total_size = 0;

  // repeated .voronoi.LatLng totem = 1;
  {
    unsigned int count = this->totem_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->totem(i));
    }
  }

  // repeated string user_id = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->user_id_size());
  for (int i = 0, n = this->user_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->user_id(i));
  }

  // repeated .voronoi.Polygon region = 3;
  {
    unsigned int count = this->region_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->region(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Voronoi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:voronoi.Voronoi)
  GOOGLE_DCHECK_NE(&from, this);
  const Voronoi* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Voronoi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:voronoi.Voronoi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:voronoi.Voronoi)
    MergeFrom(*source);
  }
}

void Voronoi::MergeFrom(const Voronoi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:voronoi.Voronoi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  totem_.MergeFrom(from.totem_);
  user_id_.MergeFrom(from.user_id_);
  region_.MergeFrom(from.region_);
}

void Voronoi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:voronoi.Voronoi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Voronoi::CopyFrom(const Voronoi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:voronoi.Voronoi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Voronoi::IsInitialized() const {
  return true;
}

void Voronoi::Swap(Voronoi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Voronoi::InternalSwap(Voronoi* other) {
  totem_.InternalSwap(&other->totem_);
  user_id_.InternalSwap(&other->user_id_);
  region_.InternalSwap(&other->region_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Voronoi::GetMetadata() const {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Voronoi

// repeated .voronoi.LatLng totem = 1;
int Voronoi::totem_size() const {
  return totem_.size();
}
void Voronoi::clear_totem() {
  totem_.Clear();
}
const ::voronoi::LatLng& Voronoi::totem(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Voronoi.totem)
  return totem_.Get(index);
}
::voronoi::LatLng* Voronoi::mutable_totem(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Voronoi.totem)
  return totem_.Mutable(index);
}
::voronoi::LatLng* Voronoi::add_totem() {
  // @@protoc_insertion_point(field_add:voronoi.Voronoi.totem)
  return totem_.Add();
}
::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >*
Voronoi::mutable_totem() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Voronoi.totem)
  return &totem_;
}
const ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >&
Voronoi::totem() const {
  // @@protoc_insertion_point(field_list:voronoi.Voronoi.totem)
  return totem_;
}

// repeated string user_id = 2;
int Voronoi::user_id_size() const {
  return user_id_.size();
}
void Voronoi::clear_user_id() {
  user_id_.Clear();
}
const ::std::string& Voronoi::user_id(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Voronoi.user_id)
  return user_id_.Get(index);
}
::std::string* Voronoi::mutable_user_id(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Voronoi.user_id)
  return user_id_.Mutable(index);
}
void Voronoi::set_user_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:voronoi.Voronoi.user_id)
  user_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Voronoi::set_user_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:voronoi.Voronoi.user_id)
  user_id_.Mutable(index)->assign(std::move(value));
}
#endif
void Voronoi::set_user_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  user_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:voronoi.Voronoi.user_id)
}
void Voronoi::set_user_id(int index, const char* value, size_t size) {
  user_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:voronoi.Voronoi.user_id)
}
::std::string* Voronoi::add_user_id() {
  // @@protoc_insertion_point(field_add_mutable:voronoi.Voronoi.user_id)
  return user_id_.Add();
}
void Voronoi::add_user_id(const ::std::string& value) {
  user_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:voronoi.Voronoi.user_id)
}
#if LANG_CXX11
void Voronoi::add_user_id(::std::string&& value) {
  user_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:voronoi.Voronoi.user_id)
}
#endif
void Voronoi::add_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  user_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:voronoi.Voronoi.user_id)
}
void Voronoi::add_user_id(const char* value, size_t size) {
  user_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:voronoi.Voronoi.user_id)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Voronoi::user_id() const {
  // @@protoc_insertion_point(field_list:voronoi.Voronoi.user_id)
  return user_id_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Voronoi::mutable_user_id() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Voronoi.user_id)
  return &user_id_;
}

// repeated .voronoi.Polygon region = 3;
int Voronoi::region_size() const {
  return region_.size();
}
void Voronoi::clear_region() {
  region_.Clear();
}
const ::voronoi::Polygon& Voronoi::region(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Voronoi.region)
  return region_.Get(index);
}
::voronoi::Polygon* Voronoi::mutable_region(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Voronoi.region)
  return region_.Mutable(index);
}
::voronoi::Polygon* Voronoi::add_region() {
  // @@protoc_insertion_point(field_add:voronoi.Voronoi.region)
  return region_.Add();
}
::google::protobuf::RepeatedPtrField< ::voronoi::Polygon >*
Voronoi::mutable_region() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Voronoi.region)
  return &region_;
}
const ::google::protobuf::RepeatedPtrField< ::voronoi::Polygon >&
Voronoi::region() const {
  // @@protoc_insertion_point(field_list:voronoi.Voronoi.region)
  return region_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Db::kUserFieldNumber;
const int Db::kVoronoiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Db::Db()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_voronoi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:voronoi.Db)
}
Db::Db(const Db& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_(from.user_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_voronoi()) {
    voronoi_ = new ::voronoi::Voronoi(*from.voronoi_);
  } else {
    voronoi_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:voronoi.Db)
}

void Db::SharedCtor() {
  voronoi_ = NULL;
  _cached_size_ = 0;
}

Db::~Db() {
  // @@protoc_insertion_point(destructor:voronoi.Db)
  SharedDtor();
}

void Db::SharedDtor() {
  if (this != internal_default_instance()) {
    delete voronoi_;
  }
}

void Db::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Db::descriptor() {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Db& Db::default_instance() {
  protobuf_voronoi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Db* Db::New(::google::protobuf::Arena* arena) const {
  Db* n = new Db;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Db::Clear() {
// @@protoc_insertion_point(message_clear_start:voronoi.Db)
  user_.Clear();
  if (GetArenaNoVirtual() == NULL && voronoi_ != NULL) {
    delete voronoi_;
  }
  voronoi_ = NULL;
}

bool Db::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:voronoi.Db)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .voronoi.User user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .voronoi.Voronoi voronoi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_voronoi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:voronoi.Db)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:voronoi.Db)
  return false;
#undef DO_
}

void Db::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:voronoi.Db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .voronoi.User user = 1;
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user(i), output);
  }

  // .voronoi.Voronoi voronoi = 2;
  if (this->has_voronoi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->voronoi_, output);
  }

  // @@protoc_insertion_point(serialize_end:voronoi.Db)
}

::google::protobuf::uint8* Db::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:voronoi.Db)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .voronoi.User user = 1;
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->user(i), deterministic, target);
  }

  // .voronoi.Voronoi voronoi = 2;
  if (this->has_voronoi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->voronoi_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:voronoi.Db)
  return target;
}

size_t Db::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:voronoi.Db)
  size_t total_size = 0;

  // repeated .voronoi.User user = 1;
  {
    unsigned int count = this->user_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user(i));
    }
  }

  // .voronoi.Voronoi voronoi = 2;
  if (this->has_voronoi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->voronoi_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Db::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:voronoi.Db)
  GOOGLE_DCHECK_NE(&from, this);
  const Db* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Db>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:voronoi.Db)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:voronoi.Db)
    MergeFrom(*source);
  }
}

void Db::MergeFrom(const Db& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:voronoi.Db)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_.MergeFrom(from.user_);
  if (from.has_voronoi()) {
    mutable_voronoi()->::voronoi::Voronoi::MergeFrom(from.voronoi());
  }
}

void Db::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:voronoi.Db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Db::CopyFrom(const Db& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:voronoi.Db)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Db::IsInitialized() const {
  return true;
}

void Db::Swap(Db* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Db::InternalSwap(Db* other) {
  user_.InternalSwap(&other->user_);
  std::swap(voronoi_, other->voronoi_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Db::GetMetadata() const {
  protobuf_voronoi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voronoi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Db

// repeated .voronoi.User user = 1;
int Db::user_size() const {
  return user_.size();
}
void Db::clear_user() {
  user_.Clear();
}
const ::voronoi::User& Db::user(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Db.user)
  return user_.Get(index);
}
::voronoi::User* Db::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Db.user)
  return user_.Mutable(index);
}
::voronoi::User* Db::add_user() {
  // @@protoc_insertion_point(field_add:voronoi.Db.user)
  return user_.Add();
}
::google::protobuf::RepeatedPtrField< ::voronoi::User >*
Db::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Db.user)
  return &user_;
}
const ::google::protobuf::RepeatedPtrField< ::voronoi::User >&
Db::user() const {
  // @@protoc_insertion_point(field_list:voronoi.Db.user)
  return user_;
}

// .voronoi.Voronoi voronoi = 2;
bool Db::has_voronoi() const {
  return this != internal_default_instance() && voronoi_ != NULL;
}
void Db::clear_voronoi() {
  if (GetArenaNoVirtual() == NULL && voronoi_ != NULL) delete voronoi_;
  voronoi_ = NULL;
}
const ::voronoi::Voronoi& Db::voronoi() const {
  // @@protoc_insertion_point(field_get:voronoi.Db.voronoi)
  return voronoi_ != NULL ? *voronoi_
                         : *::voronoi::Voronoi::internal_default_instance();
}
::voronoi::Voronoi* Db::mutable_voronoi() {
  
  if (voronoi_ == NULL) {
    voronoi_ = new ::voronoi::Voronoi;
  }
  // @@protoc_insertion_point(field_mutable:voronoi.Db.voronoi)
  return voronoi_;
}
::voronoi::Voronoi* Db::release_voronoi() {
  // @@protoc_insertion_point(field_release:voronoi.Db.voronoi)
  
  ::voronoi::Voronoi* temp = voronoi_;
  voronoi_ = NULL;
  return temp;
}
void Db::set_allocated_voronoi(::voronoi::Voronoi* voronoi) {
  delete voronoi_;
  voronoi_ = voronoi;
  if (voronoi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:voronoi.Db.voronoi)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::voronoi::Visibility, ::voronoi::Visibility_IsValid>, 14, false >
  visibility(kVisibilityFieldNumber, static_cast< ::voronoi::Visibility >(0));

// @@protoc_insertion_point(namespace_scope)

}  // namespace voronoi

// @@protoc_insertion_point(global_scope)
