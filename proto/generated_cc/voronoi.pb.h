// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voronoi.proto

#ifndef PROTOBUF_voronoi_2eproto__INCLUDED
#define PROTOBUF_voronoi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "descriptor.pb.h"
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class DescriptorProto;
class DescriptorProtoDefaultTypeInternal;
extern DescriptorProtoDefaultTypeInternal _DescriptorProto_default_instance_;
class DescriptorProto_ExtensionRange;
class DescriptorProto_ExtensionRangeDefaultTypeInternal;
extern DescriptorProto_ExtensionRangeDefaultTypeInternal _DescriptorProto_ExtensionRange_default_instance_;
class DescriptorProto_ReservedRange;
class DescriptorProto_ReservedRangeDefaultTypeInternal;
extern DescriptorProto_ReservedRangeDefaultTypeInternal _DescriptorProto_ReservedRange_default_instance_;
class EnumDescriptorProto;
class EnumDescriptorProtoDefaultTypeInternal;
extern EnumDescriptorProtoDefaultTypeInternal _EnumDescriptorProto_default_instance_;
class EnumOptions;
class EnumOptionsDefaultTypeInternal;
extern EnumOptionsDefaultTypeInternal _EnumOptions_default_instance_;
class EnumValueDescriptorProto;
class EnumValueDescriptorProtoDefaultTypeInternal;
extern EnumValueDescriptorProtoDefaultTypeInternal _EnumValueDescriptorProto_default_instance_;
class EnumValueOptions;
class EnumValueOptionsDefaultTypeInternal;
extern EnumValueOptionsDefaultTypeInternal _EnumValueOptions_default_instance_;
class FieldDescriptorProto;
class FieldDescriptorProtoDefaultTypeInternal;
extern FieldDescriptorProtoDefaultTypeInternal _FieldDescriptorProto_default_instance_;
class FieldOptions;
class FieldOptionsDefaultTypeInternal;
extern FieldOptionsDefaultTypeInternal _FieldOptions_default_instance_;
class FileDescriptorProto;
class FileDescriptorProtoDefaultTypeInternal;
extern FileDescriptorProtoDefaultTypeInternal _FileDescriptorProto_default_instance_;
class FileDescriptorSet;
class FileDescriptorSetDefaultTypeInternal;
extern FileDescriptorSetDefaultTypeInternal _FileDescriptorSet_default_instance_;
class FileOptions;
class FileOptionsDefaultTypeInternal;
extern FileOptionsDefaultTypeInternal _FileOptions_default_instance_;
class GeneratedCodeInfo;
class GeneratedCodeInfoDefaultTypeInternal;
extern GeneratedCodeInfoDefaultTypeInternal _GeneratedCodeInfo_default_instance_;
class GeneratedCodeInfo_Annotation;
class GeneratedCodeInfo_AnnotationDefaultTypeInternal;
extern GeneratedCodeInfo_AnnotationDefaultTypeInternal _GeneratedCodeInfo_Annotation_default_instance_;
class MessageOptions;
class MessageOptionsDefaultTypeInternal;
extern MessageOptionsDefaultTypeInternal _MessageOptions_default_instance_;
class MethodDescriptorProto;
class MethodDescriptorProtoDefaultTypeInternal;
extern MethodDescriptorProtoDefaultTypeInternal _MethodDescriptorProto_default_instance_;
class MethodOptions;
class MethodOptionsDefaultTypeInternal;
extern MethodOptionsDefaultTypeInternal _MethodOptions_default_instance_;
class OneofDescriptorProto;
class OneofDescriptorProtoDefaultTypeInternal;
extern OneofDescriptorProtoDefaultTypeInternal _OneofDescriptorProto_default_instance_;
class OneofOptions;
class OneofOptionsDefaultTypeInternal;
extern OneofOptionsDefaultTypeInternal _OneofOptions_default_instance_;
class ServiceDescriptorProto;
class ServiceDescriptorProtoDefaultTypeInternal;
extern ServiceDescriptorProtoDefaultTypeInternal _ServiceDescriptorProto_default_instance_;
class ServiceOptions;
class ServiceOptionsDefaultTypeInternal;
extern ServiceOptionsDefaultTypeInternal _ServiceOptions_default_instance_;
class SourceCodeInfo;
class SourceCodeInfoDefaultTypeInternal;
extern SourceCodeInfoDefaultTypeInternal _SourceCodeInfo_default_instance_;
class SourceCodeInfo_Location;
class SourceCodeInfo_LocationDefaultTypeInternal;
extern SourceCodeInfo_LocationDefaultTypeInternal _SourceCodeInfo_Location_default_instance_;
class UninterpretedOption;
class UninterpretedOptionDefaultTypeInternal;
extern UninterpretedOptionDefaultTypeInternal _UninterpretedOption_default_instance_;
class UninterpretedOption_NamePart;
class UninterpretedOption_NamePartDefaultTypeInternal;
extern UninterpretedOption_NamePartDefaultTypeInternal _UninterpretedOption_NamePart_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace voronoi {
class Db;
class DbDefaultTypeInternal;
extern DbDefaultTypeInternal _Db_default_instance_;
class LatLng;
class LatLngDefaultTypeInternal;
extern LatLngDefaultTypeInternal _LatLng_default_instance_;
class Linear;
class LinearDefaultTypeInternal;
extern LinearDefaultTypeInternal _Linear_default_instance_;
class Polygon;
class PolygonDefaultTypeInternal;
extern PolygonDefaultTypeInternal _Polygon_default_instance_;
class User;
class UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
class Voronoi;
class VoronoiDefaultTypeInternal;
extern VoronoiDefaultTypeInternal _Voronoi_default_instance_;
}  // namespace voronoi

namespace voronoi {

namespace protobuf_voronoi_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_voronoi_2eproto

enum Visibility {
  PUBLIC = 0,
  PRIVATE = 1,
  Visibility_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Visibility_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Visibility_IsValid(int value);
const Visibility Visibility_MIN = PUBLIC;
const Visibility Visibility_MAX = PRIVATE;
const int Visibility_ARRAYSIZE = Visibility_MAX + 1;

const ::google::protobuf::EnumDescriptor* Visibility_descriptor();
inline const ::std::string& Visibility_Name(Visibility value) {
  return ::google::protobuf::internal::NameOfEnum(
    Visibility_descriptor(), value);
}
inline bool Visibility_Parse(
    const ::std::string& name, Visibility* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Visibility>(
    Visibility_descriptor(), name, value);
}
// ===================================================================

class LatLng : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:voronoi.LatLng) */ {
 public:
  LatLng();
  virtual ~LatLng();

  LatLng(const LatLng& from);

  inline LatLng& operator=(const LatLng& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LatLng& default_instance();

  static inline const LatLng* internal_default_instance() {
    return reinterpret_cast<const LatLng*>(
               &_LatLng_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LatLng* other);

  // implements Message ----------------------------------------------

  inline LatLng* New() const PROTOBUF_FINAL { return New(NULL); }

  LatLng* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LatLng& from);
  void MergeFrom(const LatLng& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LatLng* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double lat = 1;
  void clear_lat();
  static const int kLatFieldNumber = 1;
  double lat() const;
  void set_lat(double value);

  // double lng = 2;
  void clear_lng();
  static const int kLngFieldNumber = 2;
  double lng() const;
  void set_lng(double value);

  // @@protoc_insertion_point(class_scope:voronoi.LatLng)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double lat_;
  double lng_;
  mutable int _cached_size_;
  friend struct protobuf_voronoi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Linear : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:voronoi.Linear) */ {
 public:
  Linear();
  virtual ~Linear();

  Linear(const Linear& from);

  inline Linear& operator=(const Linear& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Linear& default_instance();

  static inline const Linear* internal_default_instance() {
    return reinterpret_cast<const Linear*>(
               &_Linear_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Linear* other);

  // implements Message ----------------------------------------------

  inline Linear* New() const PROTOBUF_FINAL { return New(NULL); }

  Linear* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Linear& from);
  void MergeFrom(const Linear& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Linear* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 t0_s = 1;
  void clear_t0_s();
  static const int kT0SFieldNumber = 1;
  ::google::protobuf::int64 t0_s() const;
  void set_t0_s(::google::protobuf::int64 value);

  // double y0 = 2;
  void clear_y0();
  static const int kY0FieldNumber = 2;
  double y0() const;
  void set_y0(double value);

  // double dy = 3;
  void clear_dy();
  static const int kDyFieldNumber = 3;
  double dy() const;
  void set_dy(double value);

  // @@protoc_insertion_point(class_scope:voronoi.Linear)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 t0_s_;
  double y0_;
  double dy_;
  mutable int _cached_size_;
  friend struct protobuf_voronoi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:voronoi.User) */ {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  static inline const User* internal_default_instance() {
    return reinterpret_cast<const User*>(
               &_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(User* other);

  // implements Message ----------------------------------------------

  inline User* New() const PROTOBUF_FINAL { return New(NULL); }

  User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1 [(.voronoi.visibility) = PRIVATE];
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .voronoi.LatLng totem = 3;
  bool has_totem() const;
  void clear_totem();
  static const int kTotemFieldNumber = 3;
  const ::voronoi::LatLng& totem() const;
  ::voronoi::LatLng* mutable_totem();
  ::voronoi::LatLng* release_totem();
  void set_allocated_totem(::voronoi::LatLng* totem);

  // .voronoi.Linear score = 4;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 4;
  const ::voronoi::Linear& score() const;
  ::voronoi::Linear* mutable_score();
  ::voronoi::Linear* release_score();
  void set_allocated_score(::voronoi::Linear* score);

  // @@protoc_insertion_point(class_scope:voronoi.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::voronoi::LatLng* totem_;
  ::voronoi::Linear* score_;
  mutable int _cached_size_;
  friend struct protobuf_voronoi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Polygon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:voronoi.Polygon) */ {
 public:
  Polygon();
  virtual ~Polygon();

  Polygon(const Polygon& from);

  inline Polygon& operator=(const Polygon& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Polygon& default_instance();

  static inline const Polygon* internal_default_instance() {
    return reinterpret_cast<const Polygon*>(
               &_Polygon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Polygon* other);

  // implements Message ----------------------------------------------

  inline Polygon* New() const PROTOBUF_FINAL { return New(NULL); }

  Polygon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Polygon& from);
  void MergeFrom(const Polygon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Polygon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .voronoi.LatLng point = 1;
  int point_size() const;
  void clear_point();
  static const int kPointFieldNumber = 1;
  const ::voronoi::LatLng& point(int index) const;
  ::voronoi::LatLng* mutable_point(int index);
  ::voronoi::LatLng* add_point();
  ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >*
      mutable_point();
  const ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >&
      point() const;

  // @@protoc_insertion_point(class_scope:voronoi.Polygon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng > point_;
  mutable int _cached_size_;
  friend struct protobuf_voronoi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Voronoi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:voronoi.Voronoi) */ {
 public:
  Voronoi();
  virtual ~Voronoi();

  Voronoi(const Voronoi& from);

  inline Voronoi& operator=(const Voronoi& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Voronoi& default_instance();

  static inline const Voronoi* internal_default_instance() {
    return reinterpret_cast<const Voronoi*>(
               &_Voronoi_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Voronoi* other);

  // implements Message ----------------------------------------------

  inline Voronoi* New() const PROTOBUF_FINAL { return New(NULL); }

  Voronoi* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Voronoi& from);
  void MergeFrom(const Voronoi& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Voronoi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .voronoi.LatLng totem = 1;
  int totem_size() const;
  void clear_totem();
  static const int kTotemFieldNumber = 1;
  const ::voronoi::LatLng& totem(int index) const;
  ::voronoi::LatLng* mutable_totem(int index);
  ::voronoi::LatLng* add_totem();
  ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >*
      mutable_totem();
  const ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >&
      totem() const;

  // repeated string user_id = 2;
  int user_id_size() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id(int index) const;
  ::std::string* mutable_user_id(int index);
  void set_user_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(int index, ::std::string&& value);
  #endif
  void set_user_id(int index, const char* value);
  void set_user_id(int index, const char* value, size_t size);
  ::std::string* add_user_id();
  void add_user_id(const ::std::string& value);
  #if LANG_CXX11
  void add_user_id(::std::string&& value);
  #endif
  void add_user_id(const char* value);
  void add_user_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& user_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_user_id();

  // repeated .voronoi.Polygon region = 3;
  int region_size() const;
  void clear_region();
  static const int kRegionFieldNumber = 3;
  const ::voronoi::Polygon& region(int index) const;
  ::voronoi::Polygon* mutable_region(int index);
  ::voronoi::Polygon* add_region();
  ::google::protobuf::RepeatedPtrField< ::voronoi::Polygon >*
      mutable_region();
  const ::google::protobuf::RepeatedPtrField< ::voronoi::Polygon >&
      region() const;

  // @@protoc_insertion_point(class_scope:voronoi.Voronoi)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng > totem_;
  ::google::protobuf::RepeatedPtrField< ::std::string> user_id_;
  ::google::protobuf::RepeatedPtrField< ::voronoi::Polygon > region_;
  mutable int _cached_size_;
  friend struct protobuf_voronoi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Db : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:voronoi.Db) */ {
 public:
  Db();
  virtual ~Db();

  Db(const Db& from);

  inline Db& operator=(const Db& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Db& default_instance();

  static inline const Db* internal_default_instance() {
    return reinterpret_cast<const Db*>(
               &_Db_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Db* other);

  // implements Message ----------------------------------------------

  inline Db* New() const PROTOBUF_FINAL { return New(NULL); }

  Db* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Db& from);
  void MergeFrom(const Db& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Db* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .voronoi.User user = 1;
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::voronoi::User& user(int index) const;
  ::voronoi::User* mutable_user(int index);
  ::voronoi::User* add_user();
  ::google::protobuf::RepeatedPtrField< ::voronoi::User >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::voronoi::User >&
      user() const;

  // .voronoi.Voronoi voronoi = 2;
  bool has_voronoi() const;
  void clear_voronoi();
  static const int kVoronoiFieldNumber = 2;
  const ::voronoi::Voronoi& voronoi() const;
  ::voronoi::Voronoi* mutable_voronoi();
  ::voronoi::Voronoi* release_voronoi();
  void set_allocated_voronoi(::voronoi::Voronoi* voronoi);

  // @@protoc_insertion_point(class_scope:voronoi.Db)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::voronoi::User > user_;
  ::voronoi::Voronoi* voronoi_;
  mutable int _cached_size_;
  friend struct protobuf_voronoi_2eproto::TableStruct;
};
// ===================================================================

static const int kVisibilityFieldNumber = 314150;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::voronoi::Visibility, ::voronoi::Visibility_IsValid>, 14, false >
  visibility;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LatLng

// double lat = 1;
inline void LatLng::clear_lat() {
  lat_ = 0;
}
inline double LatLng::lat() const {
  // @@protoc_insertion_point(field_get:voronoi.LatLng.lat)
  return lat_;
}
inline void LatLng::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:voronoi.LatLng.lat)
}

// double lng = 2;
inline void LatLng::clear_lng() {
  lng_ = 0;
}
inline double LatLng::lng() const {
  // @@protoc_insertion_point(field_get:voronoi.LatLng.lng)
  return lng_;
}
inline void LatLng::set_lng(double value) {
  
  lng_ = value;
  // @@protoc_insertion_point(field_set:voronoi.LatLng.lng)
}

// -------------------------------------------------------------------

// Linear

// int64 t0_s = 1;
inline void Linear::clear_t0_s() {
  t0_s_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Linear::t0_s() const {
  // @@protoc_insertion_point(field_get:voronoi.Linear.t0_s)
  return t0_s_;
}
inline void Linear::set_t0_s(::google::protobuf::int64 value) {
  
  t0_s_ = value;
  // @@protoc_insertion_point(field_set:voronoi.Linear.t0_s)
}

// double y0 = 2;
inline void Linear::clear_y0() {
  y0_ = 0;
}
inline double Linear::y0() const {
  // @@protoc_insertion_point(field_get:voronoi.Linear.y0)
  return y0_;
}
inline void Linear::set_y0(double value) {
  
  y0_ = value;
  // @@protoc_insertion_point(field_set:voronoi.Linear.y0)
}

// double dy = 3;
inline void Linear::clear_dy() {
  dy_ = 0;
}
inline double Linear::dy() const {
  // @@protoc_insertion_point(field_get:voronoi.Linear.dy)
  return dy_;
}
inline void Linear::set_dy(double value) {
  
  dy_ = value;
  // @@protoc_insertion_point(field_set:voronoi.Linear.dy)
}

// -------------------------------------------------------------------

// User

// string id = 1 [(.voronoi.visibility) = PRIVATE];
inline void User::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::id() const {
  // @@protoc_insertion_point(field_get:voronoi.User.id)
  return id_.GetNoArena();
}
inline void User::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:voronoi.User.id)
}
#if LANG_CXX11
inline void User::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:voronoi.User.id)
}
#endif
inline void User::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:voronoi.User.id)
}
inline void User::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:voronoi.User.id)
}
inline ::std::string* User::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:voronoi.User.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_id() {
  // @@protoc_insertion_point(field_release:voronoi.User.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:voronoi.User.id)
}

// string name = 2;
inline void User::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::name() const {
  // @@protoc_insertion_point(field_get:voronoi.User.name)
  return name_.GetNoArena();
}
inline void User::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:voronoi.User.name)
}
#if LANG_CXX11
inline void User::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:voronoi.User.name)
}
#endif
inline void User::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:voronoi.User.name)
}
inline void User::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:voronoi.User.name)
}
inline ::std::string* User::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:voronoi.User.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_name() {
  // @@protoc_insertion_point(field_release:voronoi.User.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:voronoi.User.name)
}

// .voronoi.LatLng totem = 3;
inline bool User::has_totem() const {
  return this != internal_default_instance() && totem_ != NULL;
}
inline void User::clear_totem() {
  if (GetArenaNoVirtual() == NULL && totem_ != NULL) delete totem_;
  totem_ = NULL;
}
inline const ::voronoi::LatLng& User::totem() const {
  // @@protoc_insertion_point(field_get:voronoi.User.totem)
  return totem_ != NULL ? *totem_
                         : *::voronoi::LatLng::internal_default_instance();
}
inline ::voronoi::LatLng* User::mutable_totem() {
  
  if (totem_ == NULL) {
    totem_ = new ::voronoi::LatLng;
  }
  // @@protoc_insertion_point(field_mutable:voronoi.User.totem)
  return totem_;
}
inline ::voronoi::LatLng* User::release_totem() {
  // @@protoc_insertion_point(field_release:voronoi.User.totem)
  
  ::voronoi::LatLng* temp = totem_;
  totem_ = NULL;
  return temp;
}
inline void User::set_allocated_totem(::voronoi::LatLng* totem) {
  delete totem_;
  totem_ = totem;
  if (totem) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:voronoi.User.totem)
}

// .voronoi.Linear score = 4;
inline bool User::has_score() const {
  return this != internal_default_instance() && score_ != NULL;
}
inline void User::clear_score() {
  if (GetArenaNoVirtual() == NULL && score_ != NULL) delete score_;
  score_ = NULL;
}
inline const ::voronoi::Linear& User::score() const {
  // @@protoc_insertion_point(field_get:voronoi.User.score)
  return score_ != NULL ? *score_
                         : *::voronoi::Linear::internal_default_instance();
}
inline ::voronoi::Linear* User::mutable_score() {
  
  if (score_ == NULL) {
    score_ = new ::voronoi::Linear;
  }
  // @@protoc_insertion_point(field_mutable:voronoi.User.score)
  return score_;
}
inline ::voronoi::Linear* User::release_score() {
  // @@protoc_insertion_point(field_release:voronoi.User.score)
  
  ::voronoi::Linear* temp = score_;
  score_ = NULL;
  return temp;
}
inline void User::set_allocated_score(::voronoi::Linear* score) {
  delete score_;
  score_ = score;
  if (score) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:voronoi.User.score)
}

// -------------------------------------------------------------------

// Polygon

// repeated .voronoi.LatLng point = 1;
inline int Polygon::point_size() const {
  return point_.size();
}
inline void Polygon::clear_point() {
  point_.Clear();
}
inline const ::voronoi::LatLng& Polygon::point(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Polygon.point)
  return point_.Get(index);
}
inline ::voronoi::LatLng* Polygon::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Polygon.point)
  return point_.Mutable(index);
}
inline ::voronoi::LatLng* Polygon::add_point() {
  // @@protoc_insertion_point(field_add:voronoi.Polygon.point)
  return point_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >*
Polygon::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Polygon.point)
  return &point_;
}
inline const ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >&
Polygon::point() const {
  // @@protoc_insertion_point(field_list:voronoi.Polygon.point)
  return point_;
}

// -------------------------------------------------------------------

// Voronoi

// repeated .voronoi.LatLng totem = 1;
inline int Voronoi::totem_size() const {
  return totem_.size();
}
inline void Voronoi::clear_totem() {
  totem_.Clear();
}
inline const ::voronoi::LatLng& Voronoi::totem(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Voronoi.totem)
  return totem_.Get(index);
}
inline ::voronoi::LatLng* Voronoi::mutable_totem(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Voronoi.totem)
  return totem_.Mutable(index);
}
inline ::voronoi::LatLng* Voronoi::add_totem() {
  // @@protoc_insertion_point(field_add:voronoi.Voronoi.totem)
  return totem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >*
Voronoi::mutable_totem() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Voronoi.totem)
  return &totem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::voronoi::LatLng >&
Voronoi::totem() const {
  // @@protoc_insertion_point(field_list:voronoi.Voronoi.totem)
  return totem_;
}

// repeated string user_id = 2;
inline int Voronoi::user_id_size() const {
  return user_id_.size();
}
inline void Voronoi::clear_user_id() {
  user_id_.Clear();
}
inline const ::std::string& Voronoi::user_id(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Voronoi.user_id)
  return user_id_.Get(index);
}
inline ::std::string* Voronoi::mutable_user_id(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Voronoi.user_id)
  return user_id_.Mutable(index);
}
inline void Voronoi::set_user_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:voronoi.Voronoi.user_id)
  user_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Voronoi::set_user_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:voronoi.Voronoi.user_id)
  user_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Voronoi::set_user_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  user_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:voronoi.Voronoi.user_id)
}
inline void Voronoi::set_user_id(int index, const char* value, size_t size) {
  user_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:voronoi.Voronoi.user_id)
}
inline ::std::string* Voronoi::add_user_id() {
  // @@protoc_insertion_point(field_add_mutable:voronoi.Voronoi.user_id)
  return user_id_.Add();
}
inline void Voronoi::add_user_id(const ::std::string& value) {
  user_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:voronoi.Voronoi.user_id)
}
#if LANG_CXX11
inline void Voronoi::add_user_id(::std::string&& value) {
  user_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:voronoi.Voronoi.user_id)
}
#endif
inline void Voronoi::add_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  user_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:voronoi.Voronoi.user_id)
}
inline void Voronoi::add_user_id(const char* value, size_t size) {
  user_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:voronoi.Voronoi.user_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Voronoi::user_id() const {
  // @@protoc_insertion_point(field_list:voronoi.Voronoi.user_id)
  return user_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Voronoi::mutable_user_id() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Voronoi.user_id)
  return &user_id_;
}

// repeated .voronoi.Polygon region = 3;
inline int Voronoi::region_size() const {
  return region_.size();
}
inline void Voronoi::clear_region() {
  region_.Clear();
}
inline const ::voronoi::Polygon& Voronoi::region(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Voronoi.region)
  return region_.Get(index);
}
inline ::voronoi::Polygon* Voronoi::mutable_region(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Voronoi.region)
  return region_.Mutable(index);
}
inline ::voronoi::Polygon* Voronoi::add_region() {
  // @@protoc_insertion_point(field_add:voronoi.Voronoi.region)
  return region_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::voronoi::Polygon >*
Voronoi::mutable_region() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Voronoi.region)
  return &region_;
}
inline const ::google::protobuf::RepeatedPtrField< ::voronoi::Polygon >&
Voronoi::region() const {
  // @@protoc_insertion_point(field_list:voronoi.Voronoi.region)
  return region_;
}

// -------------------------------------------------------------------

// Db

// repeated .voronoi.User user = 1;
inline int Db::user_size() const {
  return user_.size();
}
inline void Db::clear_user() {
  user_.Clear();
}
inline const ::voronoi::User& Db::user(int index) const {
  // @@protoc_insertion_point(field_get:voronoi.Db.user)
  return user_.Get(index);
}
inline ::voronoi::User* Db::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:voronoi.Db.user)
  return user_.Mutable(index);
}
inline ::voronoi::User* Db::add_user() {
  // @@protoc_insertion_point(field_add:voronoi.Db.user)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::voronoi::User >*
Db::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:voronoi.Db.user)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::voronoi::User >&
Db::user() const {
  // @@protoc_insertion_point(field_list:voronoi.Db.user)
  return user_;
}

// .voronoi.Voronoi voronoi = 2;
inline bool Db::has_voronoi() const {
  return this != internal_default_instance() && voronoi_ != NULL;
}
inline void Db::clear_voronoi() {
  if (GetArenaNoVirtual() == NULL && voronoi_ != NULL) delete voronoi_;
  voronoi_ = NULL;
}
inline const ::voronoi::Voronoi& Db::voronoi() const {
  // @@protoc_insertion_point(field_get:voronoi.Db.voronoi)
  return voronoi_ != NULL ? *voronoi_
                         : *::voronoi::Voronoi::internal_default_instance();
}
inline ::voronoi::Voronoi* Db::mutable_voronoi() {
  
  if (voronoi_ == NULL) {
    voronoi_ = new ::voronoi::Voronoi;
  }
  // @@protoc_insertion_point(field_mutable:voronoi.Db.voronoi)
  return voronoi_;
}
inline ::voronoi::Voronoi* Db::release_voronoi() {
  // @@protoc_insertion_point(field_release:voronoi.Db.voronoi)
  
  ::voronoi::Voronoi* temp = voronoi_;
  voronoi_ = NULL;
  return temp;
}
inline void Db::set_allocated_voronoi(::voronoi::Voronoi* voronoi) {
  delete voronoi_;
  voronoi_ = voronoi;
  if (voronoi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:voronoi.Db.voronoi)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace voronoi

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::voronoi::Visibility> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::voronoi::Visibility>() {
  return ::voronoi::Visibility_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_voronoi_2eproto__INCLUDED
